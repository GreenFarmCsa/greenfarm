#spring server
server:
  port: 8081
#jmx
spring:
  jmx:
    enabled: false
#log
logging:
  level:
    root: info

# actuator
management:
  endpoints:
    web:
      exposure:
        include: "*"
      base-path: /
    health:
      probes:
        enabled: true

#swagger~
swagger:
  enabled: true
session:
    authentication:
      enable: true
mybatis:
  mapper-locations: classpath:mybatis/mapper/**/*Mapper.xml

green-farm:
  datasource:
    jdbcUrl: jdbc:h2:mem:green_farm;MODE=MYSQL;INIT=RUNSCRIPT FROM 'classpath:sql/greenfarm.sql'
    username: sa
    password: sa
    maxmum-pool-size: 10
    minnum-idle: 1
  file:
    upload-path: d://uploadTest
    live-path: /home/ec2-user/live_jhj/record/mp4
    move-path: d://bak/
  ai:
    url: http://10.225.186.186:5000
  ibm:
    objectstorage:
      enable: false
    blockchain:
      enable: false
  session:
    authentication:
      enable: true

fabric:
  name: Admin
  mspId: Org1MSP
  keyPath: cert/priv_sk
  certPath: cert/Admin@org1.example.com-cert.pem
  channelName: mychannel
  peers:
    - name: p1o1
      url: grpcs://ec2-52-80-243-127.cn-north-1.compute.amazonaws.com.cn:7051
      pemPath: cert/tlsca.org1.example.com-cert.pem
      hostname: peer0.org1.example.com
    - name: p2o1
      url: grpcs://ec2-52-80-243-127.cn-north-1.compute.amazonaws.com.cn:8051
      pemPath: cert/tlsca.org1.example.com-cert.pem
      hostname: peer1.org1.example.com
  orderers:
    - name: order
      url: grpcs://ec2-52-80-243-127.cn-north-1.compute.amazonaws.com.cn:7050
      pemPath: cert/tlsca.example.com-cert.pem
      hostname: orderer.example.com